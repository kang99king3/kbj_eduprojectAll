<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="com.hk.board" />
<!-- 검사 URL -->
    <security:http use-expressions="true">
<!--         <security:custom-filter ref="authenticationFilter" before="FORM_LOGIN_FILTER"/> -->

        <security:intercept-url pattern="/login/loginForm.do" access="permitAll" />
        <security:intercept-url pattern="/home.do" access="permitAll" />
        <security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
        <security:intercept-url pattern="/**" access="hasAnyRole('USER, ADMIN')" />
        
        <!-- login-processing-url 로그인 요청 url
        	 login-page 로그인폼 페이지 url
        	 default-target-url 로그인 성공시 이동 url
        	 authentication-failure-url	로그인 실패 시 이동 URL
        -->
        <security:form-login
        			login-processing-url="/login" 
        			login-page="/login/loginForm.do"
                    default-target-url="/home.do"
                    authentication-failure-url="/login/loginForm.do?error"
                    username-parameter="id"
                    password-parameter="password" 
                    />
                    
                    
        <security:logout logout-url="/logout"
                logout-success-url="/home.do" />
                
        <security:access-denied-handler error-page="/login/accessDenied.do" />
    	
    	<!-- 사용자가 여러 번 로그인 할 수 없게 두번째로그인으로  첫번째 로그인을 무효화 시킴
    	     이때 web.xml에 HttpSessionEventPublisher 추가 -->
    	<security:session-management>
    		<security:concurrency-control max-sessions="1"/>
    	</security:session-management>
    </security:http>


<!--     <bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl"> -->
<!--         <property name="dataSource" ref="dataSource"/> -->
<!--     </bean> -->
    <bean id="userService" class="com.hk.board.service.UserService"></bean>
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id="customAuthenticationProvider" class="com.hk.board.providers.CustomAuthenticationProvider" />    
    
<!--     <bean id="authenticationFilter" class="com.hk.board.filter.AuthenticationFilter"></bean> -->
    
<!--     <bean id="securityFilterChain" class="org.springframework.security.web.FilterChainProxy" > -->
<!--     	<security:filter-chain-map  > -->
<!--     		<security:filter-chain pattern="/**" filters="authenticationFilter"/> -->
<!--     	</security:filter-chain-map> -->
<!--     </bean> -->
    
    
    
    <!--  provider  -->
    <security:authentication-manager alias="authenticationManager">
    	<security:authentication-provider ref="customAuthenticationProvider" />
        <security:authentication-provider user-service-ref="userService" >
<!--         	<security:password-encoder ref="bcryptPasswordEncoder" /> -->
        </security:authentication-provider>
    </security:authentication-manager>

</beans>
